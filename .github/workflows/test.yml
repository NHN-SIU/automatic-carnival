name: Test Nautobot Plugin

on:
  push:
    branches: [ main, dev, '6-undersÃ¸ke-testing-med-nautobot-django' ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: nautobot-plugin-praksis
    
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_USER: nautobot
          POSTGRES_PASSWORD: nautobot
          POSTGRES_DB: nautobot
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:6
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install nautobot
        pip install -e .
        pip install -r requirements-dev.txt
    
    - name: Set up Nautobot configuration
      run: |
        echo "# Generated Nautobot configuration for testing" > nautobot_config.py
        echo "import os" >> nautobot_config.py
        echo "import sys" >> nautobot_config.py
        
        # Essential paths
        echo "BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))" >> nautobot_config.py
        echo "MEDIA_ROOT = os.path.join(BASE_DIR, 'media')" >> nautobot_config.py
        echo "REPORTS_ROOT = os.path.join(BASE_DIR, 'reports')" >> nautobot_config.py
        echo "SCRIPTS_ROOT = os.path.join(BASE_DIR, 'scripts')" >> nautobot_config.py
        echo "GIT_ROOT = os.path.join(BASE_DIR, 'git')" >> nautobot_config.py

        # Required settings
        echo "ALLOWED_HOSTS = ['*']" >> nautobot_config.py
        echo "SECRET_KEY = 'test-secret-key'" >> nautobot_config.py
        
        # Database settings
        echo "DATABASES = {" >> nautobot_config.py
        echo "    'default': {" >> nautobot_config.py
        echo "        'NAME': 'nautobot'," >> nautobot_config.py
        echo "        'USER': 'nautobot'," >> nautobot_config.py
        echo "        'PASSWORD': 'nautobot'," >> nautobot_config.py
        echo "        'HOST': 'localhost'," >> nautobot_config.py
        echo "        'PORT': '5432'," >> nautobot_config.py
        echo "        'ENGINE': 'django.db.backends.postgresql'" >> nautobot_config.py
        echo "    }" >> nautobot_config.py
        echo "}" >> nautobot_config.py
        
        # Redis settings
        echo "REDIS = {" >> nautobot_config.py
        echo "    'tasks': {" >> nautobot_config.py
        echo "        'HOST': 'localhost'," >> nautobot_config.py
        echo "        'PORT': 6379," >> nautobot_config.py
        echo "        'PASSWORD': ''," >> nautobot_config.py
        echo "        'DATABASE': 0," >> nautobot_config.py
        echo "        'SSL': False" >> nautobot_config.py
        echo "    }," >> nautobot_config.py
        echo "    'caching': {" >> nautobot_config.py
        echo "        'HOST': 'localhost'," >> nautobot_config.py
        echo "        'PORT': 6379," >> nautobot_config.py
        echo "        'PASSWORD': ''," >> nautobot_config.py
        echo "        'DATABASE': 1," >> nautobot_config.py
        echo "        'SSL': False" >> nautobot_config.py
        echo "    }" >> nautobot_config.py
        echo "}" >> nautobot_config.py
        
        # Plugin settings
        echo "PLUGINS = ['praksis_nhn_nautobot']" >> nautobot_config.py
        echo "PLUGINS_CONFIG = {}" >> nautobot_config.py
        
        # Create required directories
        echo "os.makedirs(MEDIA_ROOT, exist_ok=True)" >> nautobot_config.py
        echo "os.makedirs(REPORTS_ROOT, exist_ok=True)" >> nautobot_config.py
        echo "os.makedirs(SCRIPTS_ROOT, exist_ok=True)" >> nautobot_config.py
        echo "os.makedirs(GIT_ROOT, exist_ok=True)" >> nautobot_config.py
    
    - name: Create directories
      run: |
        mkdir -p media reports scripts git
    
    - name: Check configuration
      run: |
        export NAUTOBOT_ROOT=$(pwd)
        export NAUTOBOT_CONFIG=nautobot_config.py
        nautobot-server check
    
    - name: Run migrations
      run: |
        export NAUTOBOT_ROOT=$(pwd)
        export NAUTOBOT_CONFIG=nautobot_config.py
        nautobot-server migrate
    
    - name: Run tests
      run: |
        export NAUTOBOT_ROOT=$(pwd)
        export NAUTOBOT_CONFIG=nautobot_config.py
        nautobot-server test praksis_nhn_nautobot
    
    - name: Generate coverage report
      run: |
        pip install pytest-cov
        export NAUTOBOT_ROOT=$(pwd)
        export NAUTOBOT_CONFIG=nautobot_config.py
        pytest --cov=praksis_nhn_nautobot praksis_nhn_nautobot/tests/
        coverage xml
    
    - name: Run linting
      run: |
        pip install black flake8 pylint
        black --check praksis_nhn_nautobot
        flake8 praksis_nhn_nautobot
        pylint --disable=all --enable=unused-import praksis_nhn_nautobot